/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Contrato;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "contrato", description = "the contrato API")
public interface ContratoApi {

    @ApiOperation(value = "Crear contrato", nickname = "crearContrato", notes = "Crear contrato para un inmueble y un cliente", response = String.class, tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Crea un contrato", response = String.class) })
    @RequestMapping(value = "/contrato/",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> crearContrato(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Contrato body);


    @ApiOperation(value = "Eliminar contrato", nickname = "eliminarContrato", notes = "Elimina la información de un contrato.", response = Contrato.class, tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Elimina un contrato", response = Contrato.class),
        @ApiResponse(code = 400, message = "Parametro incorrecto") })
    @RequestMapping(value = "/contrato/{idContrato}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Contrato> eliminarContrato(@ApiParam(value = "",required=true) @PathVariable("idContrato") String idContrato);


    @ApiOperation(value = "Obtener contrato", nickname = "obtenerContrato", notes = "Obtiene la información de un contrato.", response = Contrato.class, tags={ "Inmobiliaria","cliente", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Obtiene el contrato esperado.", response = Contrato.class),
        @ApiResponse(code = 400, message = "Parametro incorrecto") })
    @RequestMapping(value = "/contrato/{idContrato}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Contrato> obtenerContrato(@ApiParam(value = "",required=true) @PathVariable("idContrato") String idContrato);

}
