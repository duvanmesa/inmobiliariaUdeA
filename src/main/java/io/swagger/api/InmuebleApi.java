/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Contrato;
import io.swagger.model.Inmueble;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "inmueble", description = "the inmueble API")
@RequestMapping(value = "/inmueble")
public interface InmuebleApi {

    @ApiOperation(value = "Actualizar inmueble", nickname = "actualizarInmueble", notes = "Actualizar información del inmueble.", response = Inmueble.class, tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Actualiza la información del inmueble", response = Inmueble.class),
        @ApiResponse(code = 400, message = "Objeto y/o parametro invalido") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Inmueble> actualizarInmueble(@ApiParam(value = "",required=true) @PathVariable("idInmueble") String idInmueble,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Inmueble body);


    @ApiOperation(value = "Elimina inmueble", nickname = "eliminarInmueble", notes = "Eliminar información de un inmueble.", response = Inmueble.class, tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Eliminar el inmueble esperado.", response = Inmueble.class),
        @ApiResponse(code = 400, message = "Parametro incorrecto.") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Inmueble> eliminarInmueble(@ApiParam(value = "",required=true) @PathVariable("idInmueble") String idInmueble);


    @ApiOperation(value = "Listar inmuebles", nickname = "listarInmueble", notes = "Lista los inmuebles que brinda la inmobiliaria en alquiler", response = Inmueble.class, responseContainer = "List", tags={ "Inmobiliaria","cliente", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lista los inmuebles de la inmobiliaria", response = Inmueble.class, responseContainer = "List") })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Inmueble>> listarInmueble();


    @ApiOperation(value = "Obtener contratos del inmueble", nickname = "obtenerContratosInmueble", notes = "Obtiene los contratos realizados al inmueble atraves del tiempo.", response = Contrato.class, responseContainer = "List", tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Obtiene los contratos realizados al inmueble en el tiempo.", response = Contrato.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Parametro invalido") })
    @RequestMapping(value = "/{idInmueble}/contratos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    List<Contrato> obtenerContratosInmueble(@ApiParam(value = "",required=true) @PathVariable("idInmueble") String idInmueble);


    @ApiOperation(value = "Obtener inmueble", nickname = "obtenerInmueble", notes = "Obtener información de un inmueble.", response = Inmueble.class, tags={ "Inmobiliaria","cliente", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Obtiene el inmueble esperado.", response = Inmueble.class),
        @ApiResponse(code = 400, message = "Parametro incorrecto.") })
    @RequestMapping(value = "/{idInmueble}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Inmueble> obtenerInmueble(@ApiParam(value = "",required=true) @PathVariable("idInmueble") String idInmueble);


    @ApiOperation(value = "Registrar inmueble", nickname = "registrarInmueble", notes = "", response = String.class, tags={ "Inmobiliaria", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Inmueble creado.", response = String.class),
        @ApiResponse(code = 400, message = "Objeto invalido."),
        @ApiResponse(code = 409, message = "Ya existe un inmueble con el codigo de idetificación ingresado.") })
    @RequestMapping(value = "/",
        produces = { "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> registrarInmueble(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Inmueble body);

}
